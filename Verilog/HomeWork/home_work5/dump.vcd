$date
	Mon Nov 30 22:40:29 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module home_work5_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$scope module ripple_carry $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 1 ' c3 $end
$var wire 1 ( c2 $end
$var wire 1 ) c1 $end
$var wire 4 * Sum [3:0] $end
$var wire 1 " Cout $end
$scope module U0 $end
$var wire 1 + Cin $end
$var wire 1 ) Cout $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 . ha_2_cout $end
$var wire 1 / ha_1_sum $end
$var wire 1 0 ha_1_cout $end
$var wire 1 1 Sum $end
$scope module U0 $end
$var wire 1 0 Cout $end
$var wire 1 / Sum $end
$var wire 1 , a $end
$var wire 1 - b $end
$upscope $end
$scope module U1 $end
$var wire 1 . Cout $end
$var wire 1 1 Sum $end
$var wire 1 / a $end
$var wire 1 + b $end
$upscope $end
$upscope $end
$scope module U1 $end
$var wire 1 ) Cin $end
$var wire 1 ( Cout $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 ha_2_cout $end
$var wire 1 5 ha_1_sum $end
$var wire 1 6 ha_1_cout $end
$var wire 1 7 Sum $end
$scope module U0 $end
$var wire 1 6 Cout $end
$var wire 1 5 Sum $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$upscope $end
$scope module U1 $end
$var wire 1 4 Cout $end
$var wire 1 7 Sum $end
$var wire 1 5 a $end
$var wire 1 ) b $end
$upscope $end
$upscope $end
$scope module U2 $end
$var wire 1 ( Cin $end
$var wire 1 ' Cout $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : ha_2_cout $end
$var wire 1 ; ha_1_sum $end
$var wire 1 < ha_1_cout $end
$var wire 1 = Sum $end
$scope module U0 $end
$var wire 1 < Cout $end
$var wire 1 ; Sum $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$upscope $end
$scope module U1 $end
$var wire 1 : Cout $end
$var wire 1 = Sum $end
$var wire 1 ; a $end
$var wire 1 ( b $end
$upscope $end
$upscope $end
$scope module U3 $end
$var wire 1 ' Cin $end
$var wire 1 " Cout $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ ha_2_cout $end
$var wire 1 A ha_1_sum $end
$var wire 1 B ha_1_cout $end
$var wire 1 C Sum $end
$scope module U0 $end
$var wire 1 B Cout $end
$var wire 1 A Sum $end
$var wire 1 > a $end
$var wire 1 ? b $end
$upscope $end
$scope module U1 $end
$var wire 1 @ Cout $end
$var wire 1 C Sum $end
$var wire 1 A a $end
$var wire 1 ' b $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1C
0B
1A
0@
1?
0>
0=
0<
0;
0:
09
08
17
06
15
04
13
02
01
00
0/
0.
0-
0,
0+
b1010 *
0)
0(
0'
b1010 &
b0 %
b1010 $
b0 #
0"
b1010 !
$end
#30
1=
b1111 !
b1111 *
11
1;
1/
19
1,
b1110 $
b1110 &
b1 #
b1 %
#40
1-
09
0?
0,
18
1>
b11 $
b11 &
b1100 #
b1100 %
#50
1?
0>
b1011 $
b1011 &
b100 #
b100 %
